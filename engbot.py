import os

from dotenv import load_dotenv

import telebot

from telebot import types


load_dotenv()


TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')


bot = telebot.TeleBot(TOKEN)



@bot.message_handler(commands=['start'])

def start(message):



    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton('–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º', url='https://t.me/milwgiv'))

    markup.add(types.InlineKeyboardButton('–î—Ä—É–≥–∏–µ –º–∞—Ä–∞—Ñ–æ–Ω—ã Way Giver', url='https://t.me/addlist/qLaq0UdnBh80NDky'))



    bot.reply_to(

        message,

        f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, {message.from_user.first_name}!\n –í—ã –ø–æ–ø–∞–ª–∏ –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É –æ—Ç way giver! üéØ\n\n"+

        "–ë–æ—Ç Way Giver –ø–æ–º–æ–∂–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –í–∞—à —É—Ä–æ–≤–µ–Ω—å –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è –¥–ª—è —Ç–µ–±—è. "+

        "–Ø –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ –º–∞—Ä–∞—Ñ–æ–Ω –ø–æ–º–æ–∂–µ—Ç –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ –º–Ω–æ–≥–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–≤–æ–µ–≥–æ –∂–µ–ª–∞–Ω–∏—è –∏ —É–ø–æ—Ä—Å—Ç–≤–∞!\n\n"+

        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /level \n\n"+

        "–ù–µ –∑–∞–±—É–¥—å—Ç–µ, —á—Ç–æ —É –í–∞—Å –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞ –∑–≤—ë–∑–¥—ã –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü",

        reply_markup=markup

    )



@bot.message_handler(commands=['level'])

def level(message):

    markup = types.InlineKeyboardMarkup()

    bt1 = types.InlineKeyboardButton('Test Your English (British Council)', url='https://learnenglish.britishcouncil.org/english-levels/online-english-level-test')

    bt2 = types.InlineKeyboardButton('English Level Test (Cambridge)', url='https://www.cambridgeenglish.org/test-your-english/')

    markup.add(bt1, bt2)

    bt3 = types.InlineKeyboardButton('EF SET', url='https://www.efset.org/')

    bt4 = types.InlineKeyboardButton('LanguageLevel', url='https://www.languagelevel.com/english/')

    markup.add(bt3, bt4)

    text = ("–ó–Ω–∞–Ω–∏–µ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ —á–∞—Å—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –æ—Ç —É—Ä–æ–≤–Ω—è A1 –¥–æ –±–ª–∏–∑–∫–æ–≥–æ –∫ —É—Ä–æ–≤–Ω—é –Ω–æ—Å–∏—Ç–µ–ª–µ–π —è–∑—ã–∫–∞ C2.\n"+

            "–ö–∞–∂–¥–æ–π —Å—Ç—É–ø–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞–±–æ—Ä –Ω–∞–≤—ã–∫–æ–≤ –≤ —á—Ç–µ–Ω–∏–∏, –≤–æ—Å–ø—Ä–∏—è—Ç–∏–∏ –Ω–∞ —Å–ª—É—Ö, —É—Å—Ç–Ω–æ–π –∏ –ø–∏—Å—å–º–µ–Ω–Ω–æ–π —Ä–µ—á–∏.\n"+

            "–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã –Ω–∞–º –Ω–∞–¥–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞—à–∏–º —É—Ä–æ–≤–Ω–µ–º –∑–Ω–∞–Ω–∏–π.\n"+

            "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∞–Ω–∞–ª–∏–∑—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /strong \n"+

            "–ï—Å–ª–∏ –≤—ã —É–∂–µ –∑–Ω–∞–µ—Ç–µ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å ‚Äî –æ—Ç–ª–∏—á–Ω–æ, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã.\n\n"+

            "‚úîÔ∏è –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Ä–æ–≤–Ω—è:")

    bot.send_message(message.chat.id, text, reply_markup=markup, disable_web_page_preview=True)

@bot.message_handler(commands=['strong'])

def level(message):

    markup = types.InlineKeyboardMarkup()

    bt1 = types.InlineKeyboardButton('Flo-Joe', url='https://www.flo-joe.co.uk/')

    bt2 = types.InlineKeyboardButton('BBC Learning English', url='https://www.bbc.co.uk/learningenglish')

    markup.add(bt1, bt2)

    bt3 = types.InlineKeyboardButton('EnglishGrammar.org', url='https://www.englishgrammar.org/quizzes/')

    bt4 = types.InlineKeyboardButton('Speechling  ', url='https://speechling.com/ru/')

    markup.add(bt3, bt4)

    text = ("–ó–Ω–∞–Ω–∏–µ —Å–≤–æ–∏—Ö —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º (—á—Ç–µ–Ω–∏–µ, —Ä–∞–∑–≥–æ–≤–æ—Ä, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞) –ø–æ–º–æ–≥–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –∏ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–∏ —Å–ª–∞–±—ã—Ö –Ω–∞–≤—ã–∫–æ–≤. –≠—Ç–æ –ø–æ–≤—ã—à–∞–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏—é, —Ç–∞–∫ –∫–∞–∫ –≤–∏–¥–Ω–æ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –æ–±–ª–∞—Å—Ç–∏, –≥–¥–µ —É–∂–µ –µ—Å—Ç—å —É—Å–ø–µ—Ö–∏. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –¥–ª—è –±–æ–ª–µ–µ —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è —è–∑—ã–∫–∞.\n"+

            "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∞–Ω–∞–ª–∏–∑—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /weak \n"+

            "–ï—Å–ª–∏ –≤—ã —É–∂–µ –∑–Ω–∞–µ—Ç–µ —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã ‚Äî –æ—Ç–ª–∏—á–Ω–æ, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã.\n\n"+

            "‚úîÔ∏è –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω:")

    bot.send_message(message.chat.id, text, reply_markup=markup, disable_web_page_preview=True)

@bot.message_handler(commands=['weak'])

def level(message):

    markup = types.InlineKeyboardMarkup()

    bt1 = types.InlineKeyboardButton('Grammarly', url='https://app.grammarly.com/')

    bt2 = types.InlineKeyboardButton('Lingua.com', url='https://lingua.com/english/')

    markup.add(bt1, bt2)

    bt3 = types.InlineKeyboardButton('English-Test.net', url='https://www.english-test.net/')

    bt4 = types.InlineKeyboardButton('Dictation.io', url='https://dictation.io/speech')

    markup.add(bt3, bt4)

    text = ("–ó–Ω–∞–Ω–∏–µ —Å–≤–æ–∏—Ö —Å–ª–∞–±—ã—Ö —Å—Ç–æ—Ä–æ–Ω –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º (—á—Ç–µ–Ω–∏–µ, —Ä–∞–∑–≥–æ–≤–æ—Ä, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞) –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –Ω–∞ —á—Ç–æ –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è –ø—Ä–∏ –∏–∑—É—á–µ–Ω–∏–∏. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ç—Ä–æ–∏—Ç—å –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è –∏ –∏–∑–±–µ–≥–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –æ—à–∏–±–æ–∫. –û—Å–æ–∑–Ω–∞–Ω–∏–µ —Å–ª–∞–±—ã—Ö –º–µ—Å—Ç —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤, —á—Ç–æ –≤–µ–¥—ë—Ç –∫ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —è–∑—ã–∫–µ –∏ –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–º—É –ø—Ä–æ–≥—Ä–µ—Å—Å—É.\n"+

            "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∞–Ω–∞–ª–∏–∑—É –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /task \n"+

            "–ï—Å–ª–∏ –≤—ã —É–∂–µ –∑–Ω–∞–µ—Ç–µ —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã ‚Äî –æ—Ç–ª–∏—á–Ω–æ, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã.\n\n"+

            "‚úîÔ∏è –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω:")

    bot.send_message(message.chat.id, text, reply_markup=markup, disable_web_page_preview=True)



@bot.message_handler(commands=['task'])

def start(message):

    bot.reply_to(

        message,

        f"{message.from_user.first_name}, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞—à–∏—Ö —Ç–µ—Å—Ç–æ–≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ—á–∫–æ–π "+

        "–≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ:\n\n A1, —Ä–∞–∑–≥–æ–≤–æ—Ä, —á—Ç–µ–Ω–∏–µ (–ü–µ—Ä–≤—ã–π —Ç–µ—Å—Ç, –≤—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç, —Ç—Ä–µ—Ç–∏–π)\n\n"+

        "–í—Å—ë –Ω–∞–ø–∏—Å–∞–Ω–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é —Å –ø—Ä–æ–±–µ–ª–æ–º. –£—Ä–æ–≤–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è —è–∑—ã–∫–æ–º –Ω–∞–ø–∏—Å–∞–Ω —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã, "+

        "–∞ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã - —Å –º–∞–ª–µ–Ω—å–∫–æ–π."

    )



@bot.message_handler(commands=['manual'])

def start(message):

    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –æ–±—É—á–µ–Ω–∏–µ', url='https://t.me/+cb8Jz1KpO0dhNWFi'))

    bot.reply_to(

        message,

        f"{message.from_user.first_name}, –í—ã —É–∑–Ω–∞–ª–∏ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ Way Giver!\n"+

        "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª —Å–≤–µ—Ä—å—Ç–µ –≤—ã—à–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ\n\n"+

        "–ù–µ –∑–∞–±—É–¥—å—Ç–µ, —á—Ç–æ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ (–Ω–∞ –∫–∞–Ω–∞–ª —Å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º) –∑–∞ –∑–≤—ë–∑–¥—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü",

        reply_markup=markup

    )



levels = ["–ê1", "–ê2", "–í1", "–í2", "–°1", "–°2"]

skills = ["—á—Ç–µ–Ω–∏–µ", "—Ä–∞–∑–≥–æ–≤–æ—Ä", "–≥—Ä–∞–º–º–∞—Ç–∏–∫–∞"]

skills_numbers = {

    "—á—Ç–µ–Ω–∏–µ": "1",

    "—Ä–∞–∑–≥–æ–≤–æ—Ä": "2",

    "–≥—Ä–∞–º–º–∞—Ç–∏–∫–∞": "3"

}



@bot.message_handler(func=lambda message: not message.text.startswith('/'))

def handle_message(message):

    text = message.text.lower().strip()

    parts = [x.strip() for x in text.split(",")]

    if len(parts) >= 2:

        user_level = parts[0].upper()

        input_skills = parts[1:]

        if user_level not in levels:

            bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑: –ê1, –ê2, –í1, –í2, –°1, –°2")

            return

        for sk in input_skills:

            if sk not in skills:

                bot.reply_to(message, f"–ù–∞–≤—ã–∫ '{sk}' –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã: —á—Ç–µ–Ω–∏–µ, —Ä–∞–∑–≥–æ–≤–æ—Ä, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞")

                return

        missing_skills = [sk for sk in skills if sk not in input_skills]

        full_skills = input_skills + missing_skills

        numbers = [skills_numbers[sk] for sk in full_skills]

        code = f"{user_level}-{'-'.join(numbers)}"

        bot.reply_to(message,

                     f"–í–∞—à —É—Ä–æ–≤–µ–Ω—å: {code}\n"+

                     "–í—ã —É–∑–Ω–∞–ª–∏ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ Way Giver!\n\n"+

                     "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /manual"

                     )

    else:

        bot.reply_to(message,

                     "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"+

                     "–ê1(—Ä—É—Å—Å–∫–∞—è –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞), —á—Ç–µ–Ω–∏–µ, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞ (—Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é —Å –ø—Ä–æ–±–µ–ª–æ–º –∏ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã)"

                     )


@bot.message_handler(content_types=['photo'])

def get_photo(message):

    bot.reply_to(message, '–ë–æ—Ç Way Giver English –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ —É–º–µ–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ñ–æ—Ç–æ')


bot.polling(none_stop=True)

